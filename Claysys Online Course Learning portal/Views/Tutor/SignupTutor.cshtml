
@model Claysys_Online_Course_Learning_portal.Models.User

@{
    ViewBag.Title = "SignupTutor";
}

<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="~/Scripts/validation.js"></script> <!-- Include your validation.js script -->
<link href="~/Content/TutorIndex.css" rel="stylesheet" type="text/css" />

<div class="background-section">
    <div class="signup-form">
        @using (Html.BeginForm("SignupTutor", "Tutor", FormMethod.Post, new { id = "signup-form" }))
        {
            <h2 class="signupcolor">Tutor Sign up</h2>
            <div class="content">
                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.FirstName, "First name")
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", name = "FirstName", placeholder = "Enter your first name" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>

                    <div class="inputbox">
                        @Html.LabelFor(m => m.LastName, "Last name")
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", name = "LastName", placeholder = "Enter your last name" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.DateOfBirth, "Date of birth")
                        @Html.TextBoxFor(m => m.DateOfBirth, new { @type = "date", @class = "form-control", @onchange = "calculateAge()", name = "DateOfBirth" })
                        @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                    </div>

                    <div class="inputbox">
                        @Html.Label("Age")
                        <input type="number" id="age" class="form-control" readonly placeholder="Your age will be calculated" />
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.Gender)
                        <div class="radio-group">
                            @Html.RadioButtonFor(m => m.Gender, "Male", new { @name = "Gender" }) Male
                            @Html.RadioButtonFor(m => m.Gender, "Female", new { @name = "Gender" }) Female
                            @Html.RadioButtonFor(m => m.Gender, "Other", new { @name = "Gender" }) Other
                        </div>
                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.Phone)
                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", name = "Phone", placeholder = "Enter your phone number" })
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                    </div>

                    <div class="inputbox">
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", name = "Email", @onblur = "checkEmail()", placeholder = "Enter your email address" })
                        <span id="email-validation-message" class="text-danger"></span>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", name = "Address", placeholder = "Enter your address" })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="inputbox">
                        @Html.LabelFor(m => m.State)
                        @Html.DropDownListFor(m => m.State, (IEnumerable<SelectListItem>)ViewBag.StateList, "Select State", new { @class = "form-control", name = "State", @onchange = "getCities()" })
                        @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.City)
                        @Html.DropDownListFor(m => m.City, (IEnumerable<SelectListItem>)ViewBag.CityList, "Select City", new { @class = "form-control", name = "City" })
                        @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.Username)
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", name = "Username", @onblur = "checkUsername()", placeholder = "Choose a username" })
                        <span id="username-validation-message" class="text-danger"></span>
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", name = "Password", placeholder = "Enter your password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="inputbox">
                        @Html.LabelFor(m => m.ConfirmPassword, "Confirm password")
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", name = "ConfirmPassword", placeholder = "Confirm your password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-row">
                    <div class="inputbox">
                        <input type="submit" class="btn btn-primary signup-button" value="Sign up" />
                        <div class="d-flex align-items-center">
                            <a href="@Url.Action("LoginTutor", "Tutor")" class="LoginButton">Already have an account? Login</a>
                        </div>
                        </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function calculateAge() {
        var dob = document.getElementById('DateOfBirth').value;
        if (dob) {
            var today = new Date();
            var birthDate = new Date(dob);
            var age = today.getFullYear() - birthDate.getFullYear();
            var monthDifference = today.getMonth() - birthDate.getMonth();
            if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            document.getElementById('age').value = age;
        }
    }

    function checkEmail() {
        var email = $('[name="Email"]').val();
        $.post('/Account/CheckEmail', { email: email }, function (data) {
            if (data.Available) {
                $('#email-validation-message').text('');
            } else {
                $('#email-validation-message').text('Email is already taken');
            }
        });
    }

    function checkUsername() {
        var username = $('[name="Username"]').val();
        $.post('/Account/CheckUsername', { username: username }, function (data) {
            if (data.Available) {
                $('#username-validation-message').text('');
            } else {
                $('#username-validation-message').text('Username is already taken');
            }
        });
    }

    function getCities() {
        var state = $('[name="State"]').val();
        $.post('/Account/GetCities', { state: state }, function (data) {
            var cityDropdown = $('[name="City"]');
            cityDropdown.empty();
            cityDropdown.append('<option value="">Select City</option>');
            $.each(data, function (index, city) {
                cityDropdown.append('<option value="' + city.Value + '">' + city.Text + '</option>');
            });
        });
    }
</script>
